####################################
# ______ _   _ _   _  _____ _____  #
# |  _  \ | | | \ | |/  ___|_   _| #
# | | | | | | |  \| |\ `--.  | |   #
# | | | | | | | . ` | `--. \ | |   #
# | |/ /| |_| | |\  |/\__/ / | |   #
# |___/  \___/\_| \_/\____/  \_/   #
#                                  #
# By Detective Pikachu             #
####################################

[global]
    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0
    follow = keyboard

    # The geometry of the window:
    # [{width}]x{height}[+/-{x}+/-{y}]
    # The geometry of the message window.
    geometry = "374x3-18+65"

    indicate_hidden = false

	# Show how many messages are currently hidden (because of geometry).
    shrink = false

    # Transparency of notifications [0-100]
    transparency = 0

    # Notification stack
    notification_height = 3

    # You want a Gap?
    separator_height = 1

    # Notification box padding
    padding = 24
    horizontal_padding = 24

    # The Thing that Barbose implemented in his fork
    frame_width = 3
    outer_frame_width = 14

    # Round corners, that's it
    corner_radius = 0

    # From what Barbose implemented, the other frame
    outer_frame_color = "#20202A"

    separator_color = auto
    sort = yes
    idle_threshold = 120

    # Text
    font = Operator Mono 13
    line_height = 1

    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "%s\n%b"
    #format = "<span size="x-large"><b> %s</b></span>\n%b"
    alignment = center
    show_age_threshold = -1
    word_wrap = true
    ellipsize = middle
    ignore_newline = false
    stack_duplicates = true
    hide_duplicate_count = true
    show_indicators = true

    ### Icons ###
    icon_position = left
    max_icon_size = 74

    ### History ###
    sticky_history = yes
    history_length = 20

    ### Misc/Advanced ###
    dmenu = /usr/bin/alacritty -e fzf:
    browser = linkhandler
    always_run_script = false
    title = Dunst
    class = Dunst
    startup_notification = false
    force_xinerama = false

[experimental]
    per_monitor_dpi = false


[shortcuts]
    close = ctrl+space
    close_all = ctrl+shift+space
    history = ctrl+grave

[urgency_low]
    background = "#20202A"
    frame_color = "#caf6bb"
    icon = "~/.config/dunst/icons/low.svg"
    foreground="#8791a3"
    timeout = 3

[urgency_normal]
    background = "#20202A"
    frame_color = "#2c2e3e"
    timeout = 5
    foreground="#8791a3"

[urgency_critical]
    background = "#20202A"
    frame_color = "#ebb9b9"
    icon = "~/.config/dunst/icons/critical.svg"
    timeout = 0
    foreground="#8791a3"

[spotify]
    body = *Spotify*
    format = "%b\n[ <span font_desc='UbuntuMono Nerd Font 20'><i>%s</i></span> ]"
    background = "#191414"

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "frame_color", "new_icon" and "format", "fullscreen".
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification

#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
# vim: ft=cfg
